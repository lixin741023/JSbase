// 刚才我们提到ES6模块是编译时加载，
// 所以我们无法在if、变量等各种运行时的语法结构中使用import，
// 但是如果我们想要在运行时导入模块，我们应该怎么办？
// <|
// 使用 import() 函数，完成动态加载。比如 vueRouter中 通过import() 引入1个组件。

// 函数的参数就是具体要加载的目标。

// 下面列举1些应用场合：
// 1、按需加载：
// <|点击某个按钮，加载某个模块
/**
 * button.onClick = function () {
 *   import('./xxx.js').then()
 * }
 */

// 2、条件加载
// <|满足某些条件，加载某个模块
/**
 * if (true) {
 *   import('./xxx.js').then()
 * }
 */

// 3、动态的模块路径
/**
 * import(f())
 */

// !!import()方法返回1个Promise对象！！！！
// import()加载模块成功以后，这个模块会作为一个对象，当作then方法的参数。因此，可以使用对象解构赋值的语法，获取输出接口。
/**
 * import('./xxx.js').then(({name, year}) => {}).catch(error => {});
 */
