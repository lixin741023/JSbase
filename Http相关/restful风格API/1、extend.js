// Rest，它的全称是Representational State Transfer，
// 翻译过来是 表现层 或者说是 表象性 的状态转换。


// 提到这个不得不说一下软件开发的三层架构:
// <|
// 1、表现层： 应用中唯一用户可见的层，即用户界面
// 2、业务逻辑层： 对业务逻辑的处理，对数据层的操作
// 3、数据访问层： 对于数据库的操作，包括增、删、改、查。当然了，数据访问层不仅仅访问数据库还可以访问二进制文件，XML文档等。


// 统一资源标识符（Uniform Resource Identifier)，
// 它是一个用于标识某一互联网资源名称的字符串，简单来说URI就是标识了1个资源所在的位置，（是位置哦！）
// 后端将资源发布为URI，前端通过URI访问资源，
// 接下来并通过HTTP动词表示要对资源进行的操作，就是Rest中所说的状态转换。

// 总结：
// |>
// rest是一种面向资源服务的API设计方式，可以唯一标识和定位资源。
// 对于该URL标识的资源做何种操作是由Http的动词决定的。
// rest请求方法有4种，包括get,post,put,delete.分别对应获取资源，添加资源，更新资源及删除资源.
