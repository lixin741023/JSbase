// WeakSet 的特性：

// 1、WeakSet 中的对象都是弱引用，即垃圾回收机制不考虑 WeakSet 对该对象的引用。
// <|也就是说，如果其他对象都不再引用该对象，那么垃圾回收机制会自动回收该对象所占用的内存，不考虑该对象还存在于 WeakSet 之中。
// <|原因：这是因为垃圾回收机制依赖引用计数，如果一个值的引用次数不为0，垃圾回收机制就不会释放这块内存。
//        结束使用该值之后，有时会忘记取消引用，导致内存无法释放，进而可能会引发内存泄漏。
// 总结：所以WeakSet 适合临时存放一组对象，以及存放跟对象绑定的信息。只要这些对象在外部消失，它在 WeakSet 里面的引用就会自动消失。

// 2、WeakSet 不可遍历。
// 为什么？
// <|原因：WeakSet 中的成员随时都有可能因为垃圾回收机制的运行，导致成员数量不稳定，所以ES6规定WeakSet不遍历。